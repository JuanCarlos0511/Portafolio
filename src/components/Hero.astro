---
// Hero.astro - Sección principal del portafolio
import Logo3D from './Logo3D.astro';
---

<section id="inicio" class="hero">
  <div class="hero-background">
    <canvas id="particle-canvas"></canvas>
    <div class="floating-shapes">
      <div class="shape shape-1"></div>
      <div class="shape shape-2"></div>
      <div class="shape shape-3"></div>
      <div class="shape shape-4"></div>
      <div class="shape shape-5"></div>
      <div class="shape shape-6"></div>
    </div>
  </div>
  <div class="hero-content">
    <div class="hero-text">
      <h1>Juan Carlos Guzmán Antonio</h1>
      <p class="hero-title">Mobile & Web Software Developer</p>
      <p class="hero-description">Passionate developer since age 15 with technical background and experience in web and mobile applications. Currently pursuing Systems Engineering while creating innovative solutions.</p>
      
      <!-- Botones de redes sociales -->
      <div class="social-buttons">
        <a href="https://github.com/JuanCarlos0511" class="social-btn github" target="_blank" rel="noopener noreferrer" aria-label="GitHub">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
          GitHub
        </a>
        
        <a href="https://www.linkedin.com/in/juan-guzm%C3%A1n-antonio-577044368/" class="social-btn linkedin" target="_blank" rel="noopener noreferrer" aria-label="LinkedIn">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
          </svg>
          LinkedIn
        </a>
        
        <a href="mailto:jcguzman924324@gmail.com" class="social-btn email" aria-label="Email">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
            <path d="M24 5.457v13.909c0 .904-.732 1.636-1.636 1.636h-3.819V11.73L12 16.64l-6.545-4.91v9.273H1.636A1.636 1.636 0 0 1 0 19.366V5.457c0-.904.732-1.636 1.636-1.636h.045L12 10.545 22.319 3.821h.045c.904 0 1.636.732 1.636 1.636Z"/>
          </svg>
          Email
        </a>
      </div>
      
      <a href="#proyectos" class="btn-primary">View Projects</a>
    </div>
    
    <div class="hero-logo">
      <Logo3D />
    </div>
    
  </div>
  
<style>
.hero {
  min-height: 100vh;
  padding: 4rem 0;
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  background: linear-gradient(135deg, var(--bg-dark) 0%, var(--bg-secondary) 50%, var(--bg-dark) 100%);
}

.hero-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

.hero-content {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 4rem;
  align-items: center;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
  position: relative;
  z-index: 10;
}

.hero-logo {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 200px;
}

.hero-text h1 {
  font-size: 3.5rem;
  font-weight: normal;
  line-height: 1.2;
  margin-bottom: 1rem;
  font-family: var(--font-titles);
  background: linear-gradient(135deg, var(--text-light) 0%, var(--light-blue) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  letter-spacing: 0.02em;
}

.hero-title {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--light-blue);
  margin-bottom: 1rem;
  font-family: var(--font-titles);
  letter-spacing: 0.01em;
}

.hero-description {
  font-size: 1.1rem;
  color: var(--text-muted);
  line-height: 1.7;
  margin-bottom: 2rem;
  font-family: var(--font-content);
}

.hero-text p {
  font-size: 1.2rem;
  color: var(--text-muted);
  margin-bottom: 2rem;
  line-height: 1.6;
}

/* Botones de redes sociales */
.social-buttons {
  display: flex;
  gap: 1rem;
  margin-bottom: 2rem;
  flex-wrap: wrap;
}

.social-btn {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  border-radius: 50px;
  text-decoration: none;
  font-weight: 500;
  font-size: 0.95rem;
  transition: all 0.3s ease;
  border: 2px solid transparent;
  position: relative;
  overflow: hidden;
}

.social-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.social-btn:hover::before {
  opacity: 1;
}

.social-btn svg {
  width: 20px;
  height: 20px;
  transition: transform 0.3s ease;
}

.social-btn:hover svg {
  transform: translateY(-2px);
}

/* GitHub button */
.social-btn.github {
  background: rgba(255, 255, 255, 0.1);
  color: var(--text-light);
  border-color: rgba(255, 255, 255, 0.2);
}

.social-btn.github::before {
  background: linear-gradient(135deg, #333, #24292e);
}

.social-btn.github:hover {
  color: white;
  border-color: #333;
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(51, 51, 51, 0.3);
}

/* LinkedIn button */
.social-btn.linkedin {
  background: rgba(0, 119, 181, 0.1);
  color: #0077b5;
  border-color: rgba(0, 119, 181, 0.3);
}

.social-btn.linkedin::before {
  background: linear-gradient(135deg, #0077b5, #005885);
}

.social-btn.linkedin:hover {
  color: white;
  border-color: #0077b5;
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 119, 181, 0.3);
}

/* Email button */
.social-btn.email {
  background: rgba(255, 0, 0, 0.1);
  color: #ff0000;
  border-color: rgba(255, 0, 0, 0.3);
}

.social-btn.email::before {
  background: linear-gradient(135deg, #ff0000, #c73650);
}

.social-btn.email:hover {
  color: white;
  border-color: #ff0000;
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(255, 0, 0, 0.3);
}

.hero-image {
  position: relative;
  display: flex;
  justify-content: center;
}

.image-container {
  position: relative;
  width: 400px;
  height: 500px;
  border-radius: 20px;
  overflow: hidden;
  background: linear-gradient(135deg, var(--accent-blue), var(--secondary-dark));
}

.image-container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  mix-blend-mode: overlay;
}

.image-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, 
    rgba(15, 52, 96, 0.8) 0%, 
    rgba(233, 69, 96, 0.6) 100%
  );
  pointer-events: none;
}

.hero-wave {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 120px;
  z-index: 1;
}

.hero-wave svg {
  position: relative;
  display: block;
  width: calc(100% + 1.3px);
  height: 120px;
}

/* Responsive */
@media (max-width: 1024px) {
  .hero-content {
    grid-template-columns: 1fr;
    gap: 3rem;
    text-align: center;
  }
  
  .hero-logo {
    order: 2;
    margin-top: 2rem;
  }
  
  .hero-text {
    order: 1;
  }
  
  .hero-text h1 {
    font-size: 2.8rem;
  }
}

@media (max-width: 768px) {
  .hero-text h1 {
    font-size: 2.2rem;
  }
  
  .image-container {
    width: 300px;
    height: 400px;
  }
  
  .hero-content {
    padding: 0 1rem;
  }
  
  /* Responsive para botones sociales */
  .social-buttons {
    justify-content: center;
    gap: 0.75rem;
  }
  
  .social-btn {
    padding: 0.6rem 1.2rem;
    font-size: 0.9rem;
  }
  
  .social-btn svg {
    width: 18px;
    height: 18px;
  }
}

/* Floating Shapes Animation */
.floating-shapes {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  z-index: 2;
}

.shape {
  position: absolute;
  opacity: 0.6;
  animation: float 15s ease-in-out infinite;
}

.shape-1 {
  top: 10%;
  left: 10%;
  width: 60px;
  height: 60px;
  background: linear-gradient(45deg, rgba(100, 200, 255, 0.3), rgba(100, 200, 255, 0.1));
  border-radius: 50%;
  animation-delay: 0s;
  border: 2px solid rgba(100, 200, 255, 0.4);
}

.shape-2 {
  top: 20%;
  right: 15%;
  width: 40px;
  height: 40px;
  background: linear-gradient(45deg, rgba(255, 100, 200, 0.3), rgba(255, 100, 200, 0.1));
  transform: rotate(45deg);
  animation-delay: 2s;
  border: 2px solid rgba(255, 100, 200, 0.4);
}

.shape-3 {
  bottom: 30%;
  left: 20%;
  width: 0;
  height: 0;
  border-left: 25px solid transparent;
  border-right: 25px solid transparent;
  border-bottom: 50px solid rgba(100, 255, 200, 0.3);
  animation-delay: 4s;
}

.shape-4 {
  top: 60%;
  right: 25%;
  width: 80px;
  height: 80px;
  background: linear-gradient(45deg, rgba(100, 200, 255, 0.2), transparent);
  border-radius: 50%;
  animation-delay: 6s;
  border: 3px solid rgba(100, 200, 255, 0.3);
}

.shape-5 {
  bottom: 15%;
  right: 10%;
  width: 50px;
  height: 50px;
  background: linear-gradient(45deg, rgba(255, 100, 200, 0.2), rgba(255, 100, 200, 0.05));
  transform: rotate(30deg);
  animation-delay: 8s;
  border: 2px solid rgba(255, 100, 200, 0.3);
}

.shape-6 {
  top: 40%;
  left: 5%;
  width: 35px;
  height: 35px;
  background: linear-gradient(45deg, rgba(100, 255, 200, 0.3), rgba(100, 255, 200, 0.1));
  border-radius: 50%;
  animation-delay: 10s;
  border: 2px solid rgba(100, 255, 200, 0.4);
}

@keyframes float {
  0%, 100% { 
    transform: translateY(0px) translateX(0px) rotate(0deg); 
  }
  25% { 
    transform: translateY(-20px) translateX(10px) rotate(90deg); 
  }
  50% { 
    transform: translateY(-10px) translateX(-10px) rotate(180deg); 
  }
  75% { 
    transform: translateY(-15px) translateX(5px) rotate(270deg); 
  }
}

/* Particle Canvas */
#particle-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none;
}
</style>

<script>
// Particle Animation
document.addEventListener('DOMContentLoaded', function() {
  const canvas = document.getElementById('particle-canvas');
  if (!canvas || !(canvas instanceof HTMLCanvasElement)) return;
  
  const ctx = canvas.getContext('2d');
  if (!ctx) return;
  
  interface Particle {
    x: number;
    y: number;
    vx: number;
    vy: number;
    radius: number;
    opacity: number;
    hue: number;
  }
  
  const particles: Particle[] = [];
  
  function resizeCanvas() {
    if (canvas && canvas instanceof HTMLCanvasElement) {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    }
  }
  
  function createParticle(): Particle {
    return {
      x: Math.random() * (canvas instanceof HTMLCanvasElement ? canvas.width : 0),
      y: Math.random() * (canvas instanceof HTMLCanvasElement ? canvas.height : 0),
      vx: (Math.random() - 0.5) * 2,
      vy: (Math.random() - 0.5) * 2,
      radius: Math.random() * 2 + 1,
      opacity: Math.random() * 0.5 + 0.2,
      hue: Math.random() * 60 + 180 // Blue-cyan range
    };
  }
  
  function updateParticle(particle: Particle) {
    particle.x += particle.vx;
    particle.y += particle.vy;
    
    const canvasWidth = canvas instanceof HTMLCanvasElement ? canvas.width : 0;
    const canvasHeight = canvas instanceof HTMLCanvasElement ? canvas.height : 0;
    
    if (particle.x < 0 || particle.x > canvasWidth) particle.vx *= -1;
    if (particle.y < 0 || particle.y > canvasHeight) particle.vy *= -1;
  }
  
  function drawParticle(particle: Particle) {
    if (!ctx) return;
    ctx.beginPath();
    ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);
    ctx.fillStyle = `hsla(${particle.hue}, 70%, 60%, ${particle.opacity})`;
    ctx.fill();
  }
  
  function drawConnections() {
    if (!ctx) return;
    for (let i = 0; i < particles.length; i++) {
      for (let j = i + 1; j < particles.length; j++) {
        const dx = particles[i].x - particles[j].x;
        const dy = particles[i].y - particles[j].y;
        const distance = Math.sqrt(dx * dx + dy * dy);
        
        if (distance < 100) {
          ctx.beginPath();
          ctx.moveTo(particles[i].x, particles[i].y);
          ctx.lineTo(particles[j].x, particles[j].y);
          ctx.strokeStyle = `hsla(200, 70%, 60%, ${0.1 * (1 - distance / 100)})`;
          ctx.lineWidth = 1;
          ctx.stroke();
        }
      }
    }
  }
  
  function animate() {
    if (!ctx || !canvas || !(canvas instanceof HTMLCanvasElement)) return;
    
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    
    particles.forEach(updateParticle);
    particles.forEach(drawParticle);
    drawConnections();
    
    requestAnimationFrame(animate);
  }
  
  // Initialize
  resizeCanvas();
  for (let i = 0; i < 50; i++) {
    particles.push(createParticle());
  }
  
  window.addEventListener('resize', resizeCanvas);
  animate();
});
</script>
